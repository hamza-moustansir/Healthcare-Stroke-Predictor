{"ast":null,"code":"var _s = $RefreshSig$();\nimport React, { useEffect } from \"react\";\nimport Swal from \"sweetalert2\";\nimport \"sweetalert2/dist/sweetalert2.min.css\";\nconst SweetAlert = ({\n  sentiment\n}) => {\n  _s();\n  useEffect(() => {\n    if (sentiment) {\n      Swal.fire({\n        icon: sentiment === \"positive\" ? \"success\" : \"error\",\n        title: sentiment === \"positive\" ? \"Sentiment Positif\" : \"Sentiment Négatif\",\n        text: `Le sentiment détecté est : ${sentiment}`,\n        customClass: {\n          popup: \"dark-mode\",\n          header: \"dark-mode\",\n          content: \"dark-mode\",\n          footer: \"dark-mode\"\n        },\n        showConfirmButton: false\n      });\n    }\n  }, [sentiment]);\n  return null;\n};\n_s(SweetAlert, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n_c = SweetAlert;\nexport default SweetAlert;\nvar _c;\n$RefreshReg$(_c, \"SweetAlert\");","map":{"version":3,"names":["React","useEffect","Swal","SweetAlert","sentiment","_s","fire","icon","title","text","customClass","popup","header","content","footer","showConfirmButton","_c","$RefreshReg$"],"sources":["C:/Users/hamza/OneDrive/Bureau/test/frontend/src/sweetalert.js"],"sourcesContent":["import React, { useEffect } from \"react\";\r\nimport Swal from \"sweetalert2\";\r\nimport \"sweetalert2/dist/sweetalert2.min.css\";\r\n\r\nconst SweetAlert = ({ sentiment }) => {\r\n  useEffect(() => {\r\n    if (sentiment) {\r\n      Swal.fire({\r\n        icon: sentiment === \"positive\" ? \"success\" : \"error\",\r\n        title: sentiment === \"positive\" ? \"Sentiment Positif\" : \"Sentiment Négatif\",\r\n        text: `Le sentiment détecté est : ${sentiment}`,\r\n        customClass: {\r\n          popup: \"dark-mode\",\r\n          header: \"dark-mode\",\r\n          content: \"dark-mode\",\r\n          footer: \"dark-mode\",\r\n        },\r\n        showConfirmButton: false,\r\n      });\r\n    }\r\n  }, [sentiment]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default SweetAlert;\r\n"],"mappings":";AAAA,OAAOA,KAAK,IAAIC,SAAS,QAAQ,OAAO;AACxC,OAAOC,IAAI,MAAM,aAAa;AAC9B,OAAO,sCAAsC;AAE7C,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAU,CAAC,KAAK;EAAAC,EAAA;EACpCJ,SAAS,CAAC,MAAM;IACd,IAAIG,SAAS,EAAE;MACbF,IAAI,CAACI,IAAI,CAAC;QACRC,IAAI,EAAEH,SAAS,KAAK,UAAU,GAAG,SAAS,GAAG,OAAO;QACpDI,KAAK,EAAEJ,SAAS,KAAK,UAAU,GAAG,mBAAmB,GAAG,mBAAmB;QAC3EK,IAAI,EAAG,8BAA6BL,SAAU,EAAC;QAC/CM,WAAW,EAAE;UACXC,KAAK,EAAE,WAAW;UAClBC,MAAM,EAAE,WAAW;UACnBC,OAAO,EAAE,WAAW;UACpBC,MAAM,EAAE;QACV,CAAC;QACDC,iBAAiB,EAAE;MACrB,CAAC,CAAC;IACJ;EACF,CAAC,EAAE,CAACX,SAAS,CAAC,CAAC;EAEf,OAAO,IAAI;AACb,CAAC;AAACC,EAAA,CAnBIF,UAAU;AAAAa,EAAA,GAAVb,UAAU;AAqBhB,eAAeA,UAAU;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}