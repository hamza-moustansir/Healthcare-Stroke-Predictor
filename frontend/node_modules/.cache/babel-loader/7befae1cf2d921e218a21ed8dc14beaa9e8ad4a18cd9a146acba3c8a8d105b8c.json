{"ast":null,"code":"import \"./pathseg\";\nimport { PolygonMask } from \"./Options/Classes/PolygonMask\";\nimport { PolygonMaskInstance } from \"./PolygonMaskInstance\";\nclass PolygonMaskPlugin {\n  constructor(engine) {\n    this.id = \"polygonMask\";\n    this._engine = engine;\n  }\n  getPlugin(container) {\n    return new PolygonMaskInstance(container, this._engine);\n  }\n  loadOptions(options, source) {\n    if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n      return;\n    }\n    let polygonOptions = options.polygon;\n    if (polygonOptions?.load === undefined) {\n      options.polygon = polygonOptions = new PolygonMask();\n    }\n    polygonOptions.load(source?.polygon);\n  }\n  needsPlugin(options) {\n    return options?.polygon?.enable ?? (options?.polygon?.type !== undefined && options.polygon.type !== \"none\");\n  }\n}\nexport async function loadPolygonMaskPlugin(engine, refresh = true) {\n  await engine.addPlugin(new PolygonMaskPlugin(engine), refresh);\n}\nexport * from \"./Enums/PolygonMaskInlineArrangement\";\nexport * from \"./Enums/PolygonMaskMoveType\";\nexport * from \"./Enums/PolygonMaskType\";","map":{"version":3,"names":["PolygonMask","PolygonMaskInstance","PolygonMaskPlugin","constructor","engine","id","_engine","getPlugin","container","loadOptions","options","source","needsPlugin","polygonOptions","polygon","load","undefined","enable","type","loadPolygonMaskPlugin","refresh","addPlugin"],"sources":["C:/Users/hamza/OneDrive/Bureau/test/frontend/node_modules/tsparticles-plugin-polygon-mask/esm/index.js"],"sourcesContent":["import \"./pathseg\";\nimport { PolygonMask } from \"./Options/Classes/PolygonMask\";\nimport { PolygonMaskInstance } from \"./PolygonMaskInstance\";\nclass PolygonMaskPlugin {\n    constructor(engine) {\n        this.id = \"polygonMask\";\n        this._engine = engine;\n    }\n    getPlugin(container) {\n        return new PolygonMaskInstance(container, this._engine);\n    }\n    loadOptions(options, source) {\n        if (!this.needsPlugin(options) && !this.needsPlugin(source)) {\n            return;\n        }\n        let polygonOptions = options.polygon;\n        if (polygonOptions?.load === undefined) {\n            options.polygon = polygonOptions = new PolygonMask();\n        }\n        polygonOptions.load(source?.polygon);\n    }\n    needsPlugin(options) {\n        return (options?.polygon?.enable ??\n            (options?.polygon?.type !== undefined && options.polygon.type !== \"none\"));\n    }\n}\nexport async function loadPolygonMaskPlugin(engine, refresh = true) {\n    await engine.addPlugin(new PolygonMaskPlugin(engine), refresh);\n}\nexport * from \"./Enums/PolygonMaskInlineArrangement\";\nexport * from \"./Enums/PolygonMaskMoveType\";\nexport * from \"./Enums/PolygonMaskType\";\n"],"mappings":"AAAA,OAAO,WAAW;AAClB,SAASA,WAAW,QAAQ,+BAA+B;AAC3D,SAASC,mBAAmB,QAAQ,uBAAuB;AAC3D,MAAMC,iBAAiB,CAAC;EACpBC,WAAWA,CAACC,MAAM,EAAE;IAChB,IAAI,CAACC,EAAE,GAAG,aAAa;IACvB,IAAI,CAACC,OAAO,GAAGF,MAAM;EACzB;EACAG,SAASA,CAACC,SAAS,EAAE;IACjB,OAAO,IAAIP,mBAAmB,CAACO,SAAS,EAAE,IAAI,CAACF,OAAO,CAAC;EAC3D;EACAG,WAAWA,CAACC,OAAO,EAAEC,MAAM,EAAE;IACzB,IAAI,CAAC,IAAI,CAACC,WAAW,CAACF,OAAO,CAAC,IAAI,CAAC,IAAI,CAACE,WAAW,CAACD,MAAM,CAAC,EAAE;MACzD;IACJ;IACA,IAAIE,cAAc,GAAGH,OAAO,CAACI,OAAO;IACpC,IAAID,cAAc,EAAEE,IAAI,KAAKC,SAAS,EAAE;MACpCN,OAAO,CAACI,OAAO,GAAGD,cAAc,GAAG,IAAIb,WAAW,CAAC,CAAC;IACxD;IACAa,cAAc,CAACE,IAAI,CAACJ,MAAM,EAAEG,OAAO,CAAC;EACxC;EACAF,WAAWA,CAACF,OAAO,EAAE;IACjB,OAAQA,OAAO,EAAEI,OAAO,EAAEG,MAAM,KAC3BP,OAAO,EAAEI,OAAO,EAAEI,IAAI,KAAKF,SAAS,IAAIN,OAAO,CAACI,OAAO,CAACI,IAAI,KAAK,MAAM,CAAC;EACjF;AACJ;AACA,OAAO,eAAeC,qBAAqBA,CAACf,MAAM,EAAEgB,OAAO,GAAG,IAAI,EAAE;EAChE,MAAMhB,MAAM,CAACiB,SAAS,CAAC,IAAInB,iBAAiB,CAACE,MAAM,CAAC,EAAEgB,OAAO,CAAC;AAClE;AACA,cAAc,sCAAsC;AACpD,cAAc,6BAA6B;AAC3C,cAAc,yBAAyB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}